import React, { useEffect, useState } from 'react';
import NavbarOnly from '../Header/NavbarOnly';
import Footer from '../Footer/Footer';
import './UserProfile.css';

const UserProfile = () => {
    const [user, setUser] = useState(null);
    const [editUser, setEditUser] = useState({ username: '', email: '', telephone: '', role: '' });
    const [loading, setLoading] = useState(true);

    useEffect(() => {
        const token = localStorage.getItem('token');
        if (!token) return;

        fetch('https://localhost:8443/api/user/infoUser', {
            headers: {
                Authorization: `Bearer ${token}`
            }
        })
            .then(res => res.json())
            .then(data => {
                setUser(data);
                setEditUser(data);
                setLoading(false);
            })
            .catch(err => {
                console.error("L·ªói khi t·∫£i th√¥ng tin ng∆∞·ªùi d√πng:", err);
                setLoading(false);
            });
    }, []);

    const handleChange = (e) => {
        setEditUser({ ...editUser, [e.target.name]: e.target.value });
    };

    const handleSave = async () => {
        const token = localStorage.getItem('token');
        try {
            const res = await fetch('https://localhost:8443/api/user/update', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    Authorization: `Bearer ${token}`
                },
                body: JSON.stringify({
                    email: editUser.email,
                    telephone: editUser.telephone
                })
            });

            if (res.ok) {
                alert("C·∫≠p nh·∫≠t th√†nh c√¥ng!");
                setUser({ ...user, ...editUser });
            } else {
                const err = await res.text();
                alert("C·∫≠p nh·∫≠t th·∫•t b·∫°i: " + err);
            }
        } catch (err) {
            alert("L·ªói khi g·ª≠i y√™u c·∫ßu c·∫≠p nh·∫≠t.");
            console.error(err);
        }
    };

    return (
        <>
            <NavbarOnly />
            <div className="container user-profile-container">
                {loading ? (
                    <p>ƒêang t·∫£i th√¥ng tin...</p>
                ) : user ? (
                    <div className="user-card">
                        <h2>üë§ Th√¥ng tin ng∆∞·ªùi d√πng</h2>

                        <div className="form-group mb-3">
                            <label>T√™n ƒëƒÉng nh·∫≠p:</label>
                            <input
                                type="text"
                                className="form-control"
                                value={editUser.username}
                                disabled
                            />
                        </div>

                        <div className="form-group mb-3">
                            <label>Email:</label>
                            <input
                                type="email"
                                className="form-control"
                                name="email"
                                value={editUser.email}
                                onChange={handleChange}
                            />
                        </div>

                        <div className="form-group mb-3">
                            <label>S·ªë ƒëi·ªán tho·∫°i:</label>
                            <input
                                type="text"
                                className="form-control"
                                name="telephone"
                                value={editUser.telephone || ''}
                                onChange={handleChange}
                            />
                        </div>

                        <div className="form-group mb-4">
                            <label>Vai tr√≤:</label>
                            <input
                                type="text"
                                className="form-control"
                                value={user.role?.name || ''}
                                disabled
                            />
                        </div>

                        <button className="btn btn-primary" onClick={handleSave}>
                            üíæ L∆∞u thay ƒë·ªïi
                        </button>
                    </div>
                ) : (
                    <div className="alert alert-warning">Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng.</div>
                )}
            </div>
            <Footer />
        </>
    );
};

export default UserProfile;

